/*
 * This file is generated by jOOQ.
 */
package org.igsq.igsqbot.entities.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.igsq.igsqbot.entities.jooq.Keys;
import org.igsq.igsqbot.entities.jooq.Public;
import org.igsq.igsqbot.entities.jooq.tables.records.TempbansRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tempbans extends TableImpl<TempbansRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.tempbans</code>
     */
    public static final Tempbans TEMPBANS = new Tempbans();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TempbansRecord> getRecordType() {
        return TempbansRecord.class;
    }

    /**
     * The column <code>public.tempbans.id</code>.
     */
    public final TableField<TempbansRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.tempbans.userid</code>.
     */
    public final TableField<TempbansRecord, Long> USERID = createField(DSL.name("userid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tempbans.guildid</code>.
     */
    public final TableField<TempbansRecord, Long> GUILDID = createField(DSL.name("guildid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tempbans.muteduntil</code>.
     */
    public final TableField<TempbansRecord, LocalDateTime> MUTEDUNTIL = createField(DSL.name("muteduntil"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    private Tempbans(Name alias, Table<TempbansRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tempbans(Name alias, Table<TempbansRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.tempbans</code> table reference
     */
    public Tempbans(String alias) {
        this(DSL.name(alias), TEMPBANS);
    }

    /**
     * Create an aliased <code>public.tempbans</code> table reference
     */
    public Tempbans(Name alias) {
        this(alias, TEMPBANS);
    }

    /**
     * Create a <code>public.tempbans</code> table reference
     */
    public Tempbans() {
        this(DSL.name("tempbans"), null);
    }

    public <O extends Record> Tempbans(Table<O> child, ForeignKey<O, TempbansRecord> key) {
        super(child, key, TEMPBANS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<TempbansRecord, Long> getIdentity() {
        return (Identity<TempbansRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<TempbansRecord> getPrimaryKey() {
        return Keys.TEMPBANS_PKEY;
    }

    @Override
    public List<UniqueKey<TempbansRecord>> getKeys() {
        return Arrays.<UniqueKey<TempbansRecord>>asList(Keys.TEMPBANS_PKEY, Keys.TEMPBANS_USERID_KEY, Keys.TEMPBANS_GUILDID_KEY);
    }

    @Override
    public Tempbans as(String alias) {
        return new Tempbans(DSL.name(alias), this);
    }

    @Override
    public Tempbans as(Name alias) {
        return new Tempbans(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tempbans rename(String name) {
        return new Tempbans(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tempbans rename(Name name) {
        return new Tempbans(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
