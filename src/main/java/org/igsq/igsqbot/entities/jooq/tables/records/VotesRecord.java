/*
 * This file is generated by jOOQ.
 */
package org.igsq.igsqbot.entities.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.igsq.igsqbot.entities.jooq.tables.Votes;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VotesRecord extends UpdatableRecordImpl<VotesRecord> implements Record5<Long, Long, Long[], Integer[], Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.votes.id</code>.
     */
    public VotesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.votes.voteid</code>.
     */
    public VotesRecord setVoteid(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.voteid</code>.
     */
    public Long getVoteid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.votes.allowedroles</code>.
     */
    public VotesRecord setAllowedroles(Long[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.allowedroles</code>.
     */
    public Long[] getAllowedroles() {
        return (Long[]) get(2);
    }

    /**
     * Setter for <code>public.votes.receivedvotes</code>.
     */
    public VotesRecord setReceivedvotes(Integer[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.receivedvotes</code>.
     */
    public Integer[] getReceivedvotes() {
        return (Integer[]) get(3);
    }

    /**
     * Setter for <code>public.votes.maxvotes</code>.
     */
    public VotesRecord setMaxvotes(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.maxvotes</code>.
     */
    public Integer getMaxvotes() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long[], Integer[], Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long[], Integer[], Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Votes.VOTES.ID;
    }

    @Override
    public Field<Long> field2() {
        return Votes.VOTES.VOTEID;
    }

    @Override
    public Field<Long[]> field3() {
        return Votes.VOTES.ALLOWEDROLES;
    }

    @Override
    public Field<Integer[]> field4() {
        return Votes.VOTES.RECEIVEDVOTES;
    }

    @Override
    public Field<Integer> field5() {
        return Votes.VOTES.MAXVOTES;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getVoteid();
    }

    @Override
    public Long[] component3() {
        return getAllowedroles();
    }

    @Override
    public Integer[] component4() {
        return getReceivedvotes();
    }

    @Override
    public Integer component5() {
        return getMaxvotes();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getVoteid();
    }

    @Override
    public Long[] value3() {
        return getAllowedroles();
    }

    @Override
    public Integer[] value4() {
        return getReceivedvotes();
    }

    @Override
    public Integer value5() {
        return getMaxvotes();
    }

    @Override
    public VotesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public VotesRecord value2(Long value) {
        setVoteid(value);
        return this;
    }

    @Override
    public VotesRecord value3(Long[] value) {
        setAllowedroles(value);
        return this;
    }

    @Override
    public VotesRecord value4(Integer[] value) {
        setReceivedvotes(value);
        return this;
    }

    @Override
    public VotesRecord value5(Integer value) {
        setMaxvotes(value);
        return this;
    }

    @Override
    public VotesRecord values(Long value1, Long value2, Long[] value3, Integer[] value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VotesRecord
     */
    public VotesRecord() {
        super(Votes.VOTES);
    }

    /**
     * Create a detached, initialised VotesRecord
     */
    public VotesRecord(Long id, Long voteid, Long[] allowedroles, Integer[] receivedvotes, Integer maxvotes) {
        super(Votes.VOTES);

        setId(id);
        setVoteid(voteid);
        setAllowedroles(allowedroles);
        setReceivedvotes(receivedvotes);
        setMaxvotes(maxvotes);
    }
}
