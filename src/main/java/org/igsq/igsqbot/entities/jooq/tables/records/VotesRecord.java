/*
 * This file is generated by jOOQ.
 */
package org.igsq.igsqbot.entities.jooq.tables.records;


import java.time.LocalDateTime;

import org.igsq.igsqbot.entities.jooq.tables.Votes;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VotesRecord extends UpdatableRecordImpl<VotesRecord> implements Record8<Long, Long, LocalDateTime, String, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.votes.voteid</code>.
     */
    public VotesRecord setVoteid(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.voteid</code>.
     */
    public Long getVoteid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.votes.guildid</code>.
     */
    public VotesRecord setGuildid(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.guildid</code>.
     */
    public Long getGuildid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.votes.timestamp</code>.
     */
    public VotesRecord setTimestamp(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.votes.topic</code>.
     */
    public VotesRecord setTopic(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.topic</code>.
     */
    public String getTopic() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.votes.optionone</code>.
     */
    public VotesRecord setOptionone(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.optionone</code>.
     */
    public String getOptionone() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.votes.optiontwo</code>.
     */
    public VotesRecord setOptiontwo(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.optiontwo</code>.
     */
    public String getOptiontwo() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.votes.votecountone</code>.
     */
    public VotesRecord setVotecountone(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.votecountone</code>.
     */
    public Integer getVotecountone() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.votes.votecounttwo</code>.
     */
    public VotesRecord setVotecounttwo(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.votes.votecounttwo</code>.
     */
    public Integer getVotecounttwo() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, LocalDateTime, String, String, String, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, LocalDateTime, String, String, String, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Votes.VOTES.VOTEID;
    }

    @Override
    public Field<Long> field2() {
        return Votes.VOTES.GUILDID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Votes.VOTES.TIMESTAMP;
    }

    @Override
    public Field<String> field4() {
        return Votes.VOTES.TOPIC;
    }

    @Override
    public Field<String> field5() {
        return Votes.VOTES.OPTIONONE;
    }

    @Override
    public Field<String> field6() {
        return Votes.VOTES.OPTIONTWO;
    }

    @Override
    public Field<Integer> field7() {
        return Votes.VOTES.VOTECOUNTONE;
    }

    @Override
    public Field<Integer> field8() {
        return Votes.VOTES.VOTECOUNTTWO;
    }

    @Override
    public Long component1() {
        return getVoteid();
    }

    @Override
    public Long component2() {
        return getGuildid();
    }

    @Override
    public LocalDateTime component3() {
        return getTimestamp();
    }

    @Override
    public String component4() {
        return getTopic();
    }

    @Override
    public String component5() {
        return getOptionone();
    }

    @Override
    public String component6() {
        return getOptiontwo();
    }

    @Override
    public Integer component7() {
        return getVotecountone();
    }

    @Override
    public Integer component8() {
        return getVotecounttwo();
    }

    @Override
    public Long value1() {
        return getVoteid();
    }

    @Override
    public Long value2() {
        return getGuildid();
    }

    @Override
    public LocalDateTime value3() {
        return getTimestamp();
    }

    @Override
    public String value4() {
        return getTopic();
    }

    @Override
    public String value5() {
        return getOptionone();
    }

    @Override
    public String value6() {
        return getOptiontwo();
    }

    @Override
    public Integer value7() {
        return getVotecountone();
    }

    @Override
    public Integer value8() {
        return getVotecounttwo();
    }

    @Override
    public VotesRecord value1(Long value) {
        setVoteid(value);
        return this;
    }

    @Override
    public VotesRecord value2(Long value) {
        setGuildid(value);
        return this;
    }

    @Override
    public VotesRecord value3(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public VotesRecord value4(String value) {
        setTopic(value);
        return this;
    }

    @Override
    public VotesRecord value5(String value) {
        setOptionone(value);
        return this;
    }

    @Override
    public VotesRecord value6(String value) {
        setOptiontwo(value);
        return this;
    }

    @Override
    public VotesRecord value7(Integer value) {
        setVotecountone(value);
        return this;
    }

    @Override
    public VotesRecord value8(Integer value) {
        setVotecounttwo(value);
        return this;
    }

    @Override
    public VotesRecord values(Long value1, Long value2, LocalDateTime value3, String value4, String value5, String value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VotesRecord
     */
    public VotesRecord() {
        super(Votes.VOTES);
    }

    /**
     * Create a detached, initialised VotesRecord
     */
    public VotesRecord(Long voteid, Long guildid, LocalDateTime timestamp, String topic, String optionone, String optiontwo, Integer votecountone, Integer votecounttwo) {
        super(Votes.VOTES);

        setVoteid(voteid);
        setGuildid(guildid);
        setTimestamp(timestamp);
        setTopic(topic);
        setOptionone(optionone);
        setOptiontwo(optiontwo);
        setVotecountone(votecountone);
        setVotecounttwo(votecounttwo);
    }
}
